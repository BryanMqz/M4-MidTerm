// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: coordinates.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace RPCDemoClient {

  /// <summary>Holder for reflection information generated from coordinates.proto</summary>
  public static partial class CoordinatesReflection {

    #region Descriptor
    /// <summary>File descriptor for coordinates.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CoordinatesReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChFjb29yZGluYXRlcy5wcm90bxIWbXVsdGlwbGllZF9jb29yZGluYXRlcyIH",
            "CgVFbXB0eSIzCgtDb29yZGluYXRlcxIKCgJjeBgBIAEoAhIKCgJjeRgCIAEo",
            "AhIMCgR0aW1lGAMgASgCMmsKEUNvb3JkaW5hdGVTZXJ2aWNlElYKDkdldENv",
            "b3JkaW5hdGVzEh0ubXVsdGlwbGllZF9jb29yZGluYXRlcy5FbXB0eRojLm11",
            "bHRpcGxpZWRfY29vcmRpbmF0ZXMuQ29vcmRpbmF0ZXMiAEIQqgINUlBDRGVt",
            "b0NsaWVudGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::RPCDemoClient.Empty), global::RPCDemoClient.Empty.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RPCDemoClient.Coordinates), global::RPCDemoClient.Coordinates.Parser, new[]{ "Cx", "Cy", "Time" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Empty : pb::IMessage<Empty> {
    private static readonly pb::MessageParser<Empty> _parser = new pb::MessageParser<Empty>(() => new Empty());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Empty> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RPCDemoClient.CoordinatesReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Empty() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Empty(Empty other) : this() {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Empty Clone() {
      return new Empty(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Empty);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Empty other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Empty other) {
      if (other == null) {
        return;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

  }

  public sealed partial class Coordinates : pb::IMessage<Coordinates> {
    private static readonly pb::MessageParser<Coordinates> _parser = new pb::MessageParser<Coordinates>(() => new Coordinates());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Coordinates> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RPCDemoClient.CoordinatesReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Coordinates() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Coordinates(Coordinates other) : this() {
      cx_ = other.cx_;
      cy_ = other.cy_;
      time_ = other.time_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Coordinates Clone() {
      return new Coordinates(this);
    }

    /// <summary>Field number for the "cx" field.</summary>
    public const int CxFieldNumber = 1;
    private float cx_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Cx {
      get { return cx_; }
      set {
        cx_ = value;
      }
    }

    /// <summary>Field number for the "cy" field.</summary>
    public const int CyFieldNumber = 2;
    private float cy_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Cy {
      get { return cy_; }
      set {
        cy_ = value;
      }
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 3;
    private float time_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Time {
      get { return time_; }
      set {
        time_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Coordinates);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Coordinates other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Cx != other.Cx) return false;
      if (Cy != other.Cy) return false;
      if (Time != other.Time) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Cx != 0F) hash ^= Cx.GetHashCode();
      if (Cy != 0F) hash ^= Cy.GetHashCode();
      if (Time != 0F) hash ^= Time.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Cx != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Cx);
      }
      if (Cy != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Cy);
      }
      if (Time != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Time);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Cx != 0F) {
        size += 1 + 4;
      }
      if (Cy != 0F) {
        size += 1 + 4;
      }
      if (Time != 0F) {
        size += 1 + 4;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Coordinates other) {
      if (other == null) {
        return;
      }
      if (other.Cx != 0F) {
        Cx = other.Cx;
      }
      if (other.Cy != 0F) {
        Cy = other.Cy;
      }
      if (other.Time != 0F) {
        Time = other.Time;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 13: {
            Cx = input.ReadFloat();
            break;
          }
          case 21: {
            Cy = input.ReadFloat();
            break;
          }
          case 29: {
            Time = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
